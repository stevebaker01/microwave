# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-07 11:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=36)),
            ],
        ),
        migrations.CreateModel(
            name='DomainAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(choices=[('spotify', 'spotify')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=1500)),
                ('version', models.CharField(max_length=20)),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Base')),
            ],
            bases=('app.base',),
        ),
        migrations.CreateModel(
            name='AlbumType',
            fields=[
                ('domainattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.DomainAttribute')),
                ('type', models.CharField(choices=[('album', 'album'), ('single', 'single'), ('compilation', 'compilation')], max_length=20)),
            ],
            bases=('app.domainattribute',),
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Base')),
            ],
            bases=('app.base',),
        ),
        migrations.CreateModel(
            name='Duration',
            fields=[
                ('domainattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.DomainAttribute')),
                ('miliseconds', models.IntegerField()),
            ],
            bases=('app.domainattribute',),
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('domainattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.DomainAttribute')),
                ('name', models.CharField(max_length=50)),
            ],
            bases=('app.domainattribute',),
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('domainattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.DomainAttribute')),
                ('type', models.CharField(choices=[('id', 'id'), ('name', 'name'), ('href', 'href'), ('uri', 'uri')], max_length=4)),
                ('identity', models.CharField(max_length=250)),
                ('cls', models.CharField(default='str', max_length=3)),
            ],
            bases=('app.domainattribute',),
        ),
        migrations.CreateModel(
            name='ReleaseDate',
            fields=[
                ('domainattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.DomainAttribute')),
                ('date', models.DateField()),
            ],
            bases=('app.domainattribute',),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Base')),
                ('acousticiness', models.FloatField()),
                ('durations', models.DurationField()),
                ('dancibility', models.FloatField()),
                ('energy', models.FloatField()),
                ('instrumentalness', models.FloatField()),
                ('key', models.PositiveSmallIntegerField()),
                ('liveness', models.FloatField()),
                ('loudness', models.FloatField()),
                ('mode', models.BooleanField()),
                ('popularity', models.PositiveSmallIntegerField()),
                ('signature', models.FloatField()),
                ('speechiness', models.FloatField()),
                ('tempo', models.FloatField()),
                ('valence', models.FloatField()),
                ('composers', models.ManyToManyField(to='app.Composer')),
                ('genres', models.ManyToManyField(to='app.Genre')),
            ],
            bases=('app.base',),
        ),
        migrations.AddField(
            model_name='playlist',
            name='identifiers',
            field=models.ManyToManyField(to='app.Identifier'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(to='app.Track'),
        ),
        migrations.AddField(
            model_name='composer',
            name='genres',
            field=models.ManyToManyField(to='app.Genre'),
        ),
        migrations.AddField(
            model_name='base',
            name='identifiers',
            field=models.ManyToManyField(to='app.Identifier'),
        ),
        migrations.AddField(
            model_name='album',
            name='composers',
            field=models.ManyToManyField(to='app.Composer'),
        ),
        migrations.AddField(
            model_name='album',
            name='genres',
            field=models.ManyToManyField(to='app.Genre'),
        ),
        migrations.AddField(
            model_name='album',
            name='release_dates',
            field=models.ManyToManyField(to='app.ReleaseDate'),
        ),
        migrations.AddField(
            model_name='album',
            name='tracks',
            field=models.ManyToManyField(to='app.Track'),
        ),
        migrations.AddField(
            model_name='album',
            name='types',
            field=models.ManyToManyField(to='app.AlbumType'),
        ),
    ]
